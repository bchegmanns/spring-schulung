Singleton, Prototype aus der Annotation-Definition
==================================================

Unterschied zu e01:
	In der XML-Definition findet sich der "Hinweis", dass die Beans
	über Annotationen definiert sind:
	
	<context:annotation-config />
	<context:component-scan base-package="de.hegmanns.spring.schulung.k002.e02" />
	

Siehe hierzu "de.hegmanns.spring.schulung.k002.e02.SpringScopeUnitTest"

Folgende Beans werden verwendet:

hallowelt.singleton.default
	keine scope-Angabe in der Definition, damit implizit "singleton"

hallowelt.singleton.explizit
	mit scope-Angabe in der Definition

hallowelt.prototype
	mit scope-Angabe in der Definition
	
Auflauf in jeder Testmethode:
	Im SpringScopeUnitTest werden für jede der Bean-Definitionen zunächst eine
	Instanz geholt und an dieser Instanz setMessage(null) aufgerufen.
	
	Anschließend wird ein zweites Mal die Bean-Instanz aus der Factory geholt.
	
	Je nach Scope besitzt der Wert für das message-Attribute den Wert der Definition
	oder null.
	Zudem beweist der Instanzvergleich, dass Singleton-Scope wirklich die gleiche Instanz
	zurück gibt.


